"""Fix flow product

Revision ID: d4c2d6776b30
Revises: 2fcf93204d09
Create Date: 2023-11-13 02:09:11.336202

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d4c2d6776b30"
down_revision: str | None = "2fcf93204d09"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=128), nullable=False),
        sa.Column("password", sa.String(length=128), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
    )
    op.create_index(op.f("ix__user__username"), "user", ["username"], unique=True)
    conn = op.get_bind()
    res = conn.execute(sa.text("select flow_id, product_id, soho_id from flow_product"))
    results = res.fetchall()
    op.drop_table("flow_product")
    tmp_table = op.create_table(
        "tmp_flow_product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("flow_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("soho_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["flow_id"], ["flow.id"], name=op.f("fk__flow_product__flow_id__flow")
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
            name=op.f("fk__flow_product__product_id__product"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__flow_product")),
        sa.UniqueConstraint("soho_id", name=op.f("uq__flow_product__soho_id")),
    )
    op.bulk_insert(
        tmp_table,
        [{"flow_id": r[0], "product_id": r[1], "soho_id": r[2]} for r in results],
    )
    op.rename_table("tmp_flow_product", "flow_product")
    op.drop_table("teacher_product_flow")
    op.create_table(
        "teacher_product_flow",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("teacher_product_id", sa.Integer(), nullable=False),
        sa.Column("flow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["flow_id"],
            ["flow.id"],
            name=op.f("fk__teacher_product_flow__flow_id__flow"),
        ),
        sa.ForeignKeyConstraint(
            ["teacher_product_id"],
            ["teacher_product.id"],
            name=op.f("fk__teacher_product_flow__teacher_product_id__teacher_product"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__teacher_product_flow")),
    )
    op.create_index(
        op.f("ix__teacher_product_flow__flow_id"),
        "teacher_product_flow",
        ["flow_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__teacher_product_flow__teacher_product_id"),
        "teacher_product_flow",
        ["teacher_product_id"],
        unique=False,
    )
    op.alter_column(
        "flow_product",
        "soho_id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
    )
    op.drop_constraint("uq__flow_product__soho_id", "flow_product", type_="unique")
    op.create_index(
        op.f("ix__flow_product__flow_id"), "flow_product", ["flow_id"], unique=False
    )
    op.create_index(
        op.f("ix__flow_product__product_id"),
        "flow_product",
        ["product_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__flow_product__soho_id"), "flow_product", ["soho_id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix__flow_product__soho_id"), table_name="flow_product")
    op.drop_index(op.f("ix__flow_product__product_id"), table_name="flow_product")
    op.drop_index(op.f("ix__flow_product__flow_id"), table_name="flow_product")
    op.create_unique_constraint(
        "uq__flow_product__soho_id", "flow_product", ["soho_id"]
    )
    op.alter_column(
        "flow_product",
        "soho_id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.drop_column("flow_product", "id")
    op.drop_index(op.f("ix__user__username"), table_name="user")
    op.drop_table("user")
    op.drop_index(
        op.f("ix__teacher_product_flow__teacher_product_id"),
        table_name="teacher_product_flow",
    )
    op.drop_index(
        op.f("ix__teacher_product_flow__flow_id"), table_name="teacher_product_flow"
    )
    # ### end Alembic commands ###
