"""update_subject

Revision ID: 623b9557b241
Revises: 3628b0300c0a
Create Date: 2024-01-21 18:36:14.637203

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "623b9557b241"
down_revision: str | None = "3628b0300c0a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("celery_tasksetmeta")
    op.drop_table("celery_taskmeta")
    op.add_column(
        "subject",
        sa.Column(
            "properties",
            postgresql.JSON(astext_type=sa.Text()),
            server_default="{ }",
            nullable=False,
        ),
    )
    op.drop_index("ix__subject__eng_name", table_name="subject")
    op.drop_column("subject", "eng_name")
    op.drop_column("subject", "autopilot_url")
    op.drop_column("subject", "group_vk_url")
    op.drop_column("subject", "drive_folder_id")
    op.drop_column("subject", "check_spreadsheet_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "subject",
        sa.Column(
            "check_spreadsheet_id",
            sa.VARCHAR(length=256),
            server_default=sa.text("''''''::character varying"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "subject",
        sa.Column(
            "drive_folder_id",
            sa.VARCHAR(length=256),
            server_default=sa.text("''''''::character varying"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "subject",
        sa.Column(
            "group_vk_url", sa.VARCHAR(length=1024), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "subject",
        sa.Column(
            "autopilot_url",
            sa.VARCHAR(length=1024),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "subject",
        sa.Column("eng_name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.create_index("ix__subject__eng_name", "subject", ["eng_name"], unique=False)
    op.drop_column("subject", "properties")
    op.create_table(
        "celery_taskmeta",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "task_id", sa.VARCHAR(length=155), autoincrement=False, nullable=True
        ),
        sa.Column("status", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("result", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "date_done", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("traceback", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column("args", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("kwargs", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("worker", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column("retries", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("queue", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="celery_taskmeta_pkey"),
        sa.UniqueConstraint("task_id", name="celery_taskmeta_task_id_key"),
    )
    op.create_table(
        "celery_tasksetmeta",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "taskset_id", sa.VARCHAR(length=155), autoincrement=False, nullable=True
        ),
        sa.Column("result", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "date_done", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="celery_tasksetmeta_pkey"),
        sa.UniqueConstraint("taskset_id", name="celery_tasksetmeta_taskset_id_key"),
    )
    # ### end Alembic commands ###
